services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: traffic-tracker-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: traffic_tracker
      MYSQL_USER: tracker_user
      MYSQL_PASSWORD: tracker_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./api/db.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - traffic-tracker

  # PHP-FPM
  php:
    build:
      context: ./api
      dockerfile: Dockerfile.php
    container_name: traffic-tracker-php
    restart: unless-stopped
    env_file:
      - ./api/.env
    depends_on:
      - database
    volumes:
      - ./api:/var/www/html
      - ./api/.env:/var/www/html/.env
    networks:
      - traffic-tracker

  # Nginx for API
  api:
    image: nginx:alpine
    container_name: traffic-tracker-api
    restart: unless-stopped
    ports:
      - "8001:80"
    volumes:
      - ./api:/var/www/html
      - ./api/.docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - traffic-tracker

  # React Frontend Dashboard
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: traffic-tracker-frontend
    restart: unless-stopped
    ports:
      - "3000:5173"
    depends_on:
      - api
    volumes:
      - ./frontend:/app
      - ./frontend/.env:/app/.env
    networks:
      - traffic-tracker

  # Tracker HTML Example
  tracker:
    build:
      context: ./tracker
      dockerfile: Dockerfile
    container_name: traffic-tracker-tracker
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./tracker:/app
      - ./tracker/.env:/app/.env
    networks:
      - traffic-tracker

volumes:
  mysql_data:
    driver: local

networks:
  traffic-tracker:
    driver: bridge